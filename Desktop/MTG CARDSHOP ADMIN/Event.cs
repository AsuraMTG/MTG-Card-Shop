// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using MTG_CARDSHOP_ADMIN;
//
//    var event = Event.FromJson(jsonString);

namespace MTG_CARDSHOP_ADMIN
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Event
    {
        [JsonProperty("event_id")]
        public long EventId { get; set; }

        [JsonProperty("event_name")]
        public string EventName { get; set; }

        [JsonProperty("event_date")]
        public DateTimeOffset EventDate { get; set; }

        [JsonProperty("event_description")]
        public string EventDescription { get; set; }

        [JsonProperty("max_participants")]
        public long MaxParticipants { get; set; }

        [JsonProperty("current_participants")]
        public long CurrentParticipants { get; set; }
    }

    public partial class Event
    {
        public static List<Event> FromJson(string json) => JsonConvert.DeserializeObject<List<Event>>(json, MTG_CARDSHOP_ADMIN.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Event> self) => JsonConvert.SerializeObject(self, MTG_CARDSHOP_ADMIN.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
